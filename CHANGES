Version 4.1.0
-------------

Sentry now maintains full support for CORS requests from external hosts. This means that clients like
raven-js will now able to securely send messages to Sentry, without compromising their secret key.

In addition:

- Trusted domains were removed. These were not fully implemented.

Version 4.0.0
-------------

Introducing Teams!

Projects are now assigned to a single team, and that team may consist of many members. Additionally
each team may own multiple projects. This makes it much easier to handle permissions across a single
organization that has many projects.

This update also includes initial changes to how filters work. ServerName Filter and SiteFilter are
no longer specified in the ``FILTERS`` setting, but instead are included automatically if you
load the respective ``sentry_servers`` and ``sentry_sites`` plugins.

Additional changes:

- Legacy data format is no longer supported (pre-Raven 1.x)
- API will now validate data before sending it into the queue, enabling better debugging for clients.

Version 3.8.0
-------------

Plugins are now configurable per-project. This makes it easy to install a plugin globally
and allow it to run only on selective projects.

Version 3.7.0
-------------

Several minor fixes, as well as a backwards incompatible change with filters.

All filters must now accept the project argument in the initializer. The signature is
now __init__(request, project).

Version 3.6.0
-------------

This version focuses on improving mebership control. It includes the ability to revoke
project members access temporarily (by suspending them), as well as revoking users
(outside of Sentry) via the user.is_active flag.

Additionally, it brings the beginnings of an "invite user" flow, allowing you to
invite users who may or may not already have accounts in the system. We plan to improve
this flow in an upcoming release to allow invitees easy registration within the system
if they dont already have an account.

Version 3.5.0
-------------

Several improvements and additions have been made around the administration, including
performance improvements.

If you're utilizing the queue, the installation guide now recommends you switch off the
database backend, and move to something more efficient (such as Redis).

Version 3.4.0
-------------

Eventlet is no longer used as the default worker for gunicorn, and thus is no longer
installed by default. If you're using the udp worker, or ``send_fake_data`` you MUST
install eventlet yourself. The recommended worker class for gunicorn is now ``gevent``
as it corrects some issues with async queries in psycopg2.

Version 3.3.0
-------------

The queue has been changed from direct Kombu, to utilizing Celery entirely. If you were
already using the queue, the upgrade simply requires you to change "sentry start worker"
to "sentry celeryd".

Version 3.0.0
-------------

Version 3 of Sentry is centered around a restructure of the internal services and
the architecture for running those. It also includes improvements to the plugin architecture.

The upgrade process should be trivial, just be aware that if you were using --config before
you must change the way you pass it so that it's before the subcommand. For example
if you were doing ``sentry start --config...`` the command would now be changed to
``sentry --config... start``.

* Sentry no longer provides the ability to daemonize processes. This should now be
  done at the system level.
* All of Sentry's CLI is now handled through Logan (https://github.com/dcramer/logan),
  which simply pipes commands to Django's internal system utilizing custom configuration.
* Plugins now have a hook for managing some level of permissions (beyond the required defaults).
* The plugin interface (IPlugin) is now documented.
* It is now recommended that clients allow the Sentry server to compute checksums.

Version 2.9.0
-------------

* Plugins must now behave as singletons and be registered with a newly provided
  sentry.plugins.@register decorator.
* The Bugzilla and Redmine extensions are no longer part of Sentry core.
* Added a global overview of projects to the administration.

Version 2.8.0
-------------

* Added an Account Settings panel which allows users to change their name,
  email, and password.
* The default Sentry server now correctly wraps itself in its own middleware.
* Improved Real-time JavaScript.

Version 2.7.0
-------------

* Added first_seen and last_seen to all message filter values.
* Added a new "since" option to the dashboard with a default value of 3 days.

Version 2.6.0
-------------

* The built-in webserver is now powered by gunicorn.
* Cleaned up several admin pages and split them into sub-pages.

Version 2.5.0
-------------

* Corrected some queue behavior.
* Resolve Feed now only resolves items active within current filters.
* Handle unicode characters in POST body for replay request.
* Ensure client side requests run checks on HTTP_REFERER
* Adjust documentation for service settings.

Version 2.4.5
-------------

* Corrected indexing behavior to handle non strings.
* If queuing is enabled the indexer will now queue it's jobs.
* Moved group creation into a transaction.

Version 2.4.4
-------------

* Mail configuration value of send_to now correctly uses ',' as a separator
  (rather than ';').
* Changed rendering of sidebar widgets for all builtin extensions.
* Added an event details slot to the sidebar pane for individual events.

Version 2.4.3
-------------

* Correct some behavior with MySQL on the groups pane.
* Correct generated configuration behavior to use absolute
  paths for run and log folders.

Version 2.4.2
-------------

* Include DSN and member type on projects list grid.

Version 2.4.1
-------------

* Change appearance of resolve states.
* Adjust user management to link username (which is required) and not
  optional fields.

Version 2.4.0
-------------

* Added user management for admins.
* Resolved events should now appear differently.
* Default membership access is now configurable.

Version 2.3.2
-------------

* Maintaining *some* level of support for SQLite.

Version 2.3.1
-------------

* Correct rendering of sites, urls, and servers on details panes.

Version 2.3.0
-------------

* The polling API and JavaScript have been refactored.

  Events now stream in (they generally do not update if they already
  exist), and will maintain correct ordering in the feed.

  This API is available for most sort options, excluding trends.
* The builtin plugin's widgets have been fixed.
* Sampling rates are now configurable.
* Some minor design tweaks.

Version 2.2.5
-------------

* The |date filter now forces things to UTC (it assumes local time).
* Event templates have been updated to resemble groups.

Version 2.2.4
-------------

* Improve error logging in API.
* Update Celery client code to use new send_encoded interfaces.
* Change JS datetimes to use UTC.
* Force clients which specify version 2.0 or newer to pass identification.
* Better default logging configuration.
* Adjust eventlet to monkey patch the world before any imports happen.
* Adjust default configuration to specify LOG and RUN directories.
* upgrade now correctly handles the delete ghosts argument.

Version 2.2.3
-------------

* Lower font size of counts on event list.
* Align actions to right side (vertical).
* Fix issue with long filters not transforming to selects.

Version 2.2.2
-------------

* Corrected event_id key to contain (project_id, event_id).
* Adjusted project form to default the user to the current user
  when accessed by an admin.
* Change sentry admin to be /manage/ to avoid any unintentional
  conflict with the Django admin.

Version 2.2.1
-------------

* Cleaned up several pages.

Version 2.2.0
-------------

* Sentry has a brand new design utlizing Bootstrap 2.
* Superusers can now create projects for users.

Version 2.1.3
-------------

* Ensure we truncate tokens to 128 characters for SearchDocument.
* Gracefully handle errors with indexing.
* Gracefully handle errors with post_process.
* Gracefully handle errors with regression_signal.
* Fixed priority sort option not activating.

Version 2.1.2
-------------

* Fixed an issue that was causing signals to not be registered.
* Made date the default sort order for aggregate stream.

Version 2.1.1
-------------

* Fixed an issue with indexing pre and post context on templates.

Version 2.1.0
-------------

* ``pytz`` is now a requirement.
* Changed default TIME_ZONE to be "UTC".
* Corrected some issues around how dates were localized.
* Initial implementation of full-text search.
* Fixed sending of regression_signal so it only happens if event
  has been marked as new.
* Changed ProjectMember.get_dsn() to use request.get_host() which
  corrects a bug in some webservers.

Version 2.0.2
-------------

* ``start`` no longer performs ``upgrade`` as its problematic.
* Initial queue usage (optional).
* Fix reference to bookmark_querystring.
* Added DSN to project member details page.

Version 2.0.1
-------------

* Skip logging of south in default server configuration as it proves to be problematic.
* Remove use of deprecated logging handler in default server configuration.
* Run ``upgrade`` as part of ``start``.
* Fix GroupBookmark related_name to be sentry namespaced.
* Correctly handle before_events() hook in polling responses.
* Removed integrated install documentation as it is no longer officially supported.
* Gracefully handle rendering errors with interfaces.
* Correct a bug with default email options.

Version 2.0
-----------

Sentry 2.0 is a major release which contains many new features as well as some large
rearchitecting of the codebase.

If you were previously extending Sentry, it would be wise
to test your extensions before upgrading.

* Added project scoping to all data in sentry.
* Added permissions to projects.
* The authorization header is now X-Sentry-Auth to avoid certain default behaviors such as
  mod_wsgi's "don't pass HTTP Authorization header".
* sentry.client has been removed
* The default key is now base64-encoded.
* sentry.interfaces are now used for coercing and rendering structured data.
* The store endpoint has a new API.
* The from_kwargs method has a new API.
* The ``class_name``, ``traceback``, an ``url`` fields have been removed.
* GroupedMessage was renamed to Group.
* Message was renamed to Event.
* Switched to Bootstrap framework.
* Added "Replay Request" action for events.
* Graphs can now be generated for Projects.
* There is now a trends sort option for aggregated events.
* Added ``sentry manage`` command.
* Sentry now has its own isolated queues (using Kombu).

Version 1.13.5
--------------

* Level filters are now precise (they no longer show their level + messages from higher levels).

Version 1.13.4
--------------

* Updated message details page to resemble look and feel of group details.

Version 1.13.3
--------------

* Added back in the "raw traceback" view.

Version 1.13.2
--------------

* Counts will now render differently with large values (e.g. 13000 will now be 13k)

Version 1.13.1
--------------

* Search by message_id will now display a list of results if there are multiple matches.

Version 1.13.0
--------------

* Deprecated the Sentry client, and added Raven to the as the default builtin.
* Removed Highstock and replaced it with an awesome OPEN SOURCE alternative, jQuery Flot.
* Default Sentry server options should now work out of the box.
* Packaged Google Web Font as part of Sentry.

Version 1.12.2
--------------

* Fixed infinite loop.

Version 1.12.1
--------------

* Stabilize migration schema (solves problem with index creation fail introduced in 1.12.0).

Version 1.12.0
--------------

* Adjusted message_id to include the checksum to avoid situations were the message_id
  that was generated did not exist due to sampling.

Version 1.11.4
--------------

* Several design improvements for group/message details panes.

Version 1.11.3
--------------

* Fixed a bug that was causing exception summary to not show.

Version 1.11.2
--------------

* Cleaned up message and group details pages (adding back some missing information).
* Cleaned up some design around odd margins/padding.

Version 1.11.1
--------------

* Fixed a bug that would cause the admin (and potentially other modules) to get loaded multiple times.

Version 1.11.0
--------------

* Added license headers.
* Removed ``sentry.helpers`` and ``sentry.routers``.
* Global module versions are now cached to avoid continuous path walking and
  import overhead.

Version 1.10.1
--------------

* Fixed an issue that was causing servers to show logger names.

Version 1.10.0
--------------

* You can now pass ``extra={'stack': True}`` to logging methods to capture
  the current frames and their locals.
* Code refactoring in various places related to stack extraction.
* Denormalized graph data in MessageCountByMinute (stores at 5m intervals).
* Denormalized filter counts into MessageFilterValue
* Added message sampling (adapted from Yuri Baburov's patch).
* Added SENTRY_MAIL_LEVEL setting.
* Added SENTRY_MAIL_INCLUDE_LOGGERS setting.
* Added SENTRY_MAIL_EXCLUDE_LOGGERS setting.
* Added the ``level`` argument to the cleanup command.
* The thrashed key is now set correctly in request.sentry.
* Added user information to all messages that have ``request``.
* Changed the hashing function for messages that include
  stacktraces to ignore the ``message`` and line numbers.
* Much improved test coverage.

Version 1.9.0
-------------

* Load the Frequency chart asynchronously.
* Frequency chart no longer shows for SQLite.
* Switch graphing library to Highstock from Highcharts.

Version 1.8.10
--------------

* Ensure dictionary keys are coerced to strings.
* Fixed path to missing_permissions.html.

Version 1.8.9
-------------

* Safely handle unpickling objects that may not have been stored in a
  valid format.

Version 1.8.8
-------------

* Changed ``sentry cleanup`` to use a range query.

Version 1.8.7
-------------

* Added "Clear Feed" option.
* Version information will be read from pkg_resources if possible.
* Cleared up documentation on configuration settings..
* Performance improvements to ``Client.send()``.
* Added default 404/500 pages.
* Added support for Django's LOGIN_URL setting.
* Fixed a memory leak in the client (thanks to Ben Bangert).

Version 1.8.6.2
---------------

* Reverted change which required distribute.
* Cleaned up configuration defaults.

Version 1.8.6.1
---------------

* Include distribute_setup.py in the MANIFEST to ship it in sdists.

Version 1.8.6
-------------

* Corrected an issue which was causing certain settings (like WEB_HOST) to
  not take affect in custom configuration files.
* The Sentry server will now pull in default server settings, as well as
  ~/.sentry/sentry.conf.py if --config is not passed to it.

Version 1.8.5.1
---------------

* Fixed a bug which caused thrashing prevention to not function correctly.
* Corrected an error in transform()'s recursion safety.
* Changed packaging to use Distribute.

Version 1.8.5
-------------

* Pulled test suite out of the Sentry namespace to avoid conflicts in projects.

Version 1.8.4.2
---------------

* Added missing invalid_message_id template.

Version 1.8.4.1
---------------

* Fixed an error that was causing LOG_LEVELS to not display correctly.

Version 1.8.4
-------------

* The Sentry base client will now pass along the timestamp from when the
  message was generated.

Version 1.8.3.1
---------------

* Fixed a case where the client may hit a transaction aborted error when
  transforming variables.

Version 1.8.3
-------------

* Added several settings which were Django specific so that they can be
  configured isolated to the Sentry instance.
* Graceful failover for when a cache backend isnt working properly and
  throttling is enabled.
* Better rendering of non-dict variables when passed within extra data.
* Graceful failover for searching on message_id's that aren't found.

Version 1.8.0
-------------

* Refactored Sentry server to run standalone (sentry --help).

Version 1.7.5
-------------

* Implemented new client/server storage API and signing methods.
* Fixed a bug where accessing __sentry__ would sometimes cause errors on
  certain code paths.

Version 1.7.4
-------------

* Fixed a bug with potential recursion issues.
* Fixed a bug with the storage API and unicode keys.

Version 1.7.3
-------------

* Storage API has better responses when data fails to decode, or
  you send a bad request.
* Documentation improvements for JSON storage API.

Version 1.7.2
-------------

* All strings, lists, tuples, and sets are now shortened before sending
  to the server. Iterable data structures are truncated to the first
  50 items, and strings are truncated to the first 200 characters.

  Both shorteners have configurable values in the settings.

Version 1.7.1
-------------

* Fixed a bug that slipped through with blocktrans usage.

Version 1.7.0
-------------

* Added ``score`` to ``GroupedMessage`` (schema change).
* Added ``MessageIndex`` (schema change).
* Added Async client (thanks to Yuri Baburov).
* Added support for raw_post_data (thanks to Matthew Schinckel).
* django-paging and django-indexer no longer need to be in INSTALLED_APPS.
* Added an index for GroupedMessages.times_seen.
* The ``score`` column will update atomically in PostgreSQL and MySQL.
* Added the frequency sort option.
* Better internationalization support.
* Fixed a bug with Oracle's date truncation support (changed to hh24).
* Respect TIME_ZONE by using auto_now_* on DateTimeField's.
* Tests required Haystack and Celery are now skipped if module is not found.

Version 1.6.10
--------------

* Added JSON support to storage API.
* Changed default client to use JSON format.

Version 1.6.9.1
---------------

* Fixed an issue with encoding to UTF-8 for Haystack.

Version 1.6.9
-------------

* Added URLs to default search parameters.
* Fixed a bug to ensure template information is only added if its the correct loader

Version 1.6.8.1
---------------

* Search will now show when unauthenticated (e.g. when SENTRY_PUBLIC is enabled)

Version 1.6.8
-------------

* Search no longer allows filters.
* Search no longer allows arbitrary queries without Haystack.
* Added logger, level, site, server, and url to search index.
* Haystack has been updated for further flexibility.
* SearchFilter is now unused (you should update your configs).

Version 1.6.7
-------------

* Moved static media into /static/.
* Added serve_static view to handle static media solely within Sentry.
* Added SENTRY_STATIC_URL_PREFIX setting.

Version 1.6.6
-------------

* setup.py install will no longer install example_project.
* Fixed an issue where __sentry__ would be called even if it wasn't a callable.
* Fixed an issue where transactions would attempt a rollback when not managed while creating
  the sort index.

Version 1.8.8
-------------

* Set a last_message_id so when thrashing is hit there is still a point of reference for tracing.
* Check correct permissions for Sentry.

Version 1.6.4
-------------

* Fixed a memory leak due to TextNode's being created from leading whitespace in realtime packets.

Version 1.6.3
-------------

* Fixed a critical bug in the Sentry JS namespace preventing it from loading.

Version 1.6.2
-------------

* LogHandler will attempt to pick up the request automatically using SentryLogMiddleware.
* Updated AJAX CSRF support for Django 1.2.5.
* request.sentry is now set in any event which has request as part of the parameters.

Version 1.6.0
-------------

* Added message references (uuid's) as message_id in Message
* Fixed css compatibility issues with TextWidget
* SearchFilter now allows searching by message reference id
* Added Sentry404CatchMiddleware
* Added SentryResponseErrorIdMiddleware
* The `request` argument can now be passed into any ``create_from_`` method.

(History beyond 1.6.0 is not present)